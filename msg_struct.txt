1-1	客户端和服务端的消息结构说明
struct msg_t{
	unsigned char head[4];
	char body[1024];
};

从client到server的消息有
0、send消息
1、login登录消息

-------------------------------
从server到client的消息有
0、send消息
1、status用户状态消息
2、sys系统消息

1-2	消息说明
消息结构
struct msg_t{
	unsigned char head[4];
	char body[1024];
};


//客户ID为1端要登录服务端
第一步，QT实现一个TCPSocet，连接到服务端所在的Ip和端口号

第二步，格式化消息
struct msg_t msg;
msg.head[0] = 1;//代表要给服务端发送login
msg.head[1] = 1;
msg.head[2] :暂时保留
msg.head[3] :暂时保留
msg.body：登录密码(字符)

第三步
将msg通过TCPSOcket发送到服务端

//服务端收到来自客户端的登录消息
第一步、判断客户端的登录账号，密码是否合法如果合法
第二步、格式化消息
struct msg_t msg;
msg.head[0] = 2:系统消息(整数)
msg.head[1] :（整数）0无法识别的消息，1无效userid，2无效密码, 3userid已经登录,4其他
msg.head[2] :暂时保留
msg.head[3] :暂时保留
msg.body[1024]：空，暂时保留
通过TCPSocket将消息发送给cleint

如果客户端验证通过，一切合法。
head[0] = 1:用户状态消息（整数）
head[1] :暂时保留
head[2] :暂时保留
head[3] :暂时保留
body[0]:ID号为0的用户在线状态（字符），（'0'离线），（'1'在线）

//客户ID为1要给ID2发送消息
struct msg_t msg;
msg.head[0] = 0:send消息（整数）
msg.head[1] :1消息源（源用户ID号）（整数）
msg.head[2] :2消息目的（目的用户ID号）（整数）
head[3] :暂时保留
body[1024]:"你好"
客户端通过TCPsocket将msg发送到server

//server接收到叻仔客户ID为1的消息要把消息转发到ID2
struct msg_t msg;
msg.head[0] = 0:send消息（整数）
msg.head[1] :1消息源（源用户ID号）（整数）
msg.head[2] :2消息目的（目的用户ID号）（整数）
head[3] :暂时保留
body[1024]:"你好"
服务端端通过TCPsocket将msg发送到ID2对应的客户端